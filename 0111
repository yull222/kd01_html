import TailButton from "../UI/TailButton";
import { useState, useEffect, useRef } from "react";

export default function MyRef1() {
  const refInput1 = useRef();
  const refInput2 = useRef();
  const result = useRef();
  const refSelect = useRef();

  // 컴포넌트 생성 시 첫 번째 입력 상자에 포커스
  useEffect(() => {
    refInput1.current.focus();
  }, []);

  // 계산 핸들러
  const handleCal = (e) => {
    e.preventDefault(); // 기본 동작 방지

    // 입력 값 가져오기
    const num1 = parseFloat(refInput1.current.value);
    const num2 = parseFloat(refInput2.current.value);
    const operator = refSelect.current.value;

    let calcResult = 0;

    // 연산 수행
    switch (operator) {
      case "+":
        calcResult = num1 + num2;
        break;
      case "-":
        calcResult = num1 - num2;
        break;
      case "x":
        calcResult = num1 * num2;
        break;
      case "/":
        calcResult = num2 !== 0 ? num1 / num2 : "NaN"; // 0으로 나누는 경우 방지
        break;
      default:
        calcResult = "Error";
        break;
    }

    // 결과값 업데이트
    result.current.value = calcResult;
  };

  return (
    <div className="w-full flex justify-center flex-col items-center">
      <form className="w-10/12 grid grid-cols-5 gap-5 bg-red-100 p-5">
        <input
          type="number"
          ref={refInput1}
          className="bg-amber-100 border border-amber-300 text-black text-sm rounded-lg"
        />

        <select
          ref={refSelect}
          className="bg-gray-50 border border-gray-300 text-gray-900 text-lg rounded-lg text-center focus:ring-blue-500 focus:border-blue-500 block w-full p-2"
        >
          <option value="+" defaultValue>
            +
          </option>
          <option value="-">-</option>
          <option value="x">x</option>
          <option value="/">/</option>
        </select>

        <input
          type="number"
          ref={refInput2}
          className="bg-amber-100 border border-amber-300 text-black text-sm rounded-lg"
        />

        <TailButton caption="=" color="blue" onClick={handleCal} />

        <input
          type="text"
          ref={result}
          readOnly
          className="bg-amber-100 border border-amber-300 text-black text-sm rounded-lg"
        />
      </form>
    </div>
  );
}
